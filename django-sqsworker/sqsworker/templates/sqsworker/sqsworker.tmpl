files:
  "/opt/elasticbeanstalk/hooks/appdeploy/post/00_run_supervised_sqsworker.sh":
    mode: "000755"
    owner: root
    group: root
    content: |
      #!/usr/bin/env bash

      # Get django environment variables
      sqsworkerenv=`cat /opt/python/current/env | tr '\n' ',' | sed 's/export //g' | sed 's/$PATH/%(ENV_PATH)s/g' | sed 's/$PYTHONPATH//g' | sed 's/$LD_LIBRARY_PATH//g'`
      sqsworkerenv=${sqsworkerenv%?}

      # Create sqsworker configuration script
      sqsworkerconf="{% for key in settings.SQS_WORKER_FUNCTIONS.keys %}
      [program:{{key}}_sqsworker]
      ; Set full path to sqsworker program if using virtualenv
      command=/opt/python/run/venv/bin/python manage.py sqsworker {{key}}

      directory=/opt/python/current/app
      user=wsgi
      numprocs=1
      stdout_logfile=/var/log/{{key}}_sqsworker.log
      stderr_logfile=/var/log/{{key}}_sqsworker.log
      autostart=true
      autorestart=true
      startsecs=10

      ; Need to wait for currently executing tasks to finish at shutdown.
      ; Increase this if you have very long running tasks.
      stopwaitsecs = 600

      ; When resorting to send SIGKILL to the program to terminate it
      ; send SIGKILL to its whole process group instead,
      ; taking care of its children as well.
      killasgroup=true

      priority=998

      environment=$sqsworkerenv
      {% endfor %}"

      # Create the sqsworker supervisord conf script
      echo "$sqsworkerconf" | tee /opt/python/etc/sqsworker.conf

      # Add configuration script to supervisord conf (if not there already)
      if ! grep -Fxq "[include]" /opt/python/etc/supervisord.conf
          then
          echo "[include]" | tee -a /opt/python/etc/supervisord.conf
          echo "files: sqsworker.conf" | tee -a /opt/python/etc/supervisord.conf
      fi

      # Reread the supervisord config
      /usr/local/bin/supervisorctl -c /opt/python/etc/supervisord.conf reread

      # Update supervisord in cache without restarting all services
      /usr/local/bin/supervisorctl -c /opt/python/etc/supervisord.conf update

      # Start/Restart sqsworkers through supervisord
{% for key in settings.SQS_WORKER_FUNCTIONS.keys %}
      /usr/local/bin/supervisorctl -c /opt/python/etc/supervisord.conf restart {{key}}_sqsworker{% endfor %}
